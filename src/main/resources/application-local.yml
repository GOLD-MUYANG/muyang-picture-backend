server:
  port: 8123
  servlet:
    context-path: /api
spring:
  # 空间图片分表
  shardingsphere:
    datasource:
      names: muyang_picture
      muyang_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/muyang_picture
        username: root
        password: muyang123
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: muyang_picture.picture  # 动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.muyang.muyangpicturebackend.manager.sharding.PictureShardingAlgorithm
    props:
      sql-show: true

  #开放更大的文件上传体积
  servlet:
    multipart:
      max-file-size: 10MB
  application:
    name: muyang-picture-backend
    #数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/muyang_picture?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: muyang123
  #   Redis 配置
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 5000
#  profiles:
#    active: local
mybatis-plus:


  configuration:
    # 驼峰命名
    map-underscore-to-camel-case: false
    # 仅在开发环境开启日志（运行时打印sql）
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    enable-sql-runner: true
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
#接口文档配置
knife4j:
  enable: true
  openapi:
    title: 接口文档
    version: v1.0
    group:
      default:
        # 指定扫描的接口规则
        api-rule: package
        api-rule-resources:
          - com.muyang.muyangpicturebackend.controller
# 对象存储配置（需要从腾讯云获取）
cos:
  client:
    host: https://muyang-1341770834.cos.ap-shanghai.myqcloud.com
    SecretId: AKIDXxBD2f0DE5kFds7E9fJl1A7TglfMwY8X
    SecretKey: JQOAnESUq0ykLjutfFfw1ub6OL7g3FE3
    region: ap-shanghai
    bucket: muyang-1341770834
# 阿里云 AI 配置
aliYunAi:
  apiKey: sk-7906da1f952d4574832a391227c30a01
